<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.information.dao.TransactionMapper">
  <resultMap id="BaseResultMap" type="com.information.pojo.Transaction">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="devices_id" jdbcType="INTEGER" property="devicesId" />
    <result column="buy_electric" jdbcType="INTEGER" property="buyElectric" />
    <result column="money" jdbcType="INTEGER" property="money" />
    <result column="create_time" jdbcType="INTEGER" property="createTime" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="out_trade_no" jdbcType="CHAR" property="outTradeNo" />
    <result column="status" jdbcType="SMALLINT" property="status" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="elec_price" jdbcType="INTEGER" property="elecPrice" />
    <result column="elec_charge" jdbcType="INTEGER" property="elecCharge" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, devices_id, buy_electric, money, create_time, user_id, out_trade_no, status, 
    code, elec_price, elec_charge
  </sql>
  <select id="selectByExample" parameterType="com.information.pojo.TransactionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from transaction
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from transaction
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from transaction
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.information.pojo.TransactionExample">
    delete from transaction
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.information.pojo.Transaction">
    insert into transaction (id, devices_id, buy_electric, 
      money, create_time, user_id, 
      out_trade_no, status, code, 
      elec_price, elec_charge)
    values (#{id,jdbcType=INTEGER}, #{devicesId,jdbcType=INTEGER}, #{buyElectric,jdbcType=INTEGER}, 
      #{money,jdbcType=INTEGER}, #{createTime,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{outTradeNo,jdbcType=CHAR}, #{status,jdbcType=SMALLINT}, #{code,jdbcType=VARCHAR}, 
      #{elecPrice,jdbcType=INTEGER}, #{elecCharge,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.information.pojo.Transaction">
    insert into transaction
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="devicesId != null">
        devices_id,
      </if>
      <if test="buyElectric != null">
        buy_electric,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="outTradeNo != null">
        out_trade_no,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="elecPrice != null">
        elec_price,
      </if>
      <if test="elecCharge != null">
        elec_charge,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="devicesId != null">
        #{devicesId,jdbcType=INTEGER},
      </if>
      <if test="buyElectric != null">
        #{buyElectric,jdbcType=INTEGER},
      </if>
      <if test="money != null">
        #{money,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="outTradeNo != null">
        #{outTradeNo,jdbcType=CHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=SMALLINT},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="elecPrice != null">
        #{elecPrice,jdbcType=INTEGER},
      </if>
      <if test="elecCharge != null">
        #{elecCharge,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.information.pojo.TransactionExample" resultType="java.lang.Long">
    select count(*) from transaction
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update transaction
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.devicesId != null">
        devices_id = #{record.devicesId,jdbcType=INTEGER},
      </if>
      <if test="record.buyElectric != null">
        buy_electric = #{record.buyElectric,jdbcType=INTEGER},
      </if>
      <if test="record.money != null">
        money = #{record.money,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.outTradeNo != null">
        out_trade_no = #{record.outTradeNo,jdbcType=CHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=SMALLINT},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.elecPrice != null">
        elec_price = #{record.elecPrice,jdbcType=INTEGER},
      </if>
      <if test="record.elecCharge != null">
        elec_charge = #{record.elecCharge,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update transaction
    set id = #{record.id,jdbcType=INTEGER},
      devices_id = #{record.devicesId,jdbcType=INTEGER},
      buy_electric = #{record.buyElectric,jdbcType=INTEGER},
      money = #{record.money,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      out_trade_no = #{record.outTradeNo,jdbcType=CHAR},
      status = #{record.status,jdbcType=SMALLINT},
      code = #{record.code,jdbcType=VARCHAR},
      elec_price = #{record.elecPrice,jdbcType=INTEGER},
      elec_charge = #{record.elecCharge,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.information.pojo.Transaction">
    update transaction
    <set>
      <if test="devicesId != null">
        devices_id = #{devicesId,jdbcType=INTEGER},
      </if>
      <if test="buyElectric != null">
        buy_electric = #{buyElectric,jdbcType=INTEGER},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="outTradeNo != null">
        out_trade_no = #{outTradeNo,jdbcType=CHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=SMALLINT},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="elecPrice != null">
        elec_price = #{elecPrice,jdbcType=INTEGER},
      </if>
      <if test="elecCharge != null">
        elec_charge = #{elecCharge,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.information.pojo.Transaction">
    update transaction
    set devices_id = #{devicesId,jdbcType=INTEGER},
      buy_electric = #{buyElectric,jdbcType=INTEGER},
      money = #{money,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      out_trade_no = #{outTradeNo,jdbcType=CHAR},
      status = #{status,jdbcType=SMALLINT},
      code = #{code,jdbcType=VARCHAR},
      elec_price = #{elecPrice,jdbcType=INTEGER},
      elec_charge = #{elecCharge,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.information.pojo.TransactionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from transaction
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>