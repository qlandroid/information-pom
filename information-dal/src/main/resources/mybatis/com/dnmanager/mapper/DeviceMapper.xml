<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.information.dao.DeviceMapper">
  <resultMap id="BaseResultMap" type="com.information.pojo.Device">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="type_id" jdbcType="CHAR" property="typeId" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="buy_electric" jdbcType="INTEGER" property="buyElectric" />
    <result column="electric" jdbcType="INTEGER" property="electric" />
    <result column="status" jdbcType="SMALLINT" property="status" />
    <result column="category_id" jdbcType="INTEGER" property="categoryId" />
    <result column="operator_id" jdbcType="INTEGER" property="operatorId" />
    <result column="detailed_id" jdbcType="INTEGER" property="detailedId" />
    <result column="device_admin" jdbcType="VARCHAR" property="deviceAdmin" />
    <result column="device_address" jdbcType="VARCHAR" property="deviceAddress" />
    <result column="users_id" jdbcType="INTEGER" property="usersId" />
    <result column="time" jdbcType="INTEGER" property="time" />
    <result column="money" jdbcType="INTEGER" property="money" />
    <result column="balance" jdbcType="INTEGER" property="balance" />
    <result column="d_status" jdbcType="SMALLINT" property="dStatus" />
    <result column="voltage" jdbcType="INTEGER" property="voltage" />
    <result column="electric_current" jdbcType="INTEGER" property="electricCurrent" />
    <result column="power" jdbcType="INTEGER" property="power" />
    <result column="reactive_power" jdbcType="INTEGER" property="reactivePower" />
    <result column="apparent_power" jdbcType="INTEGER" property="apparentPower" />
    <result column="power_factor" jdbcType="INTEGER" property="powerFactor" />
    <result column="frequency" jdbcType="INTEGER" property="frequency" />
    <result column="leakage_current" jdbcType="INTEGER" property="leakageCurrent" />
    <result column="temperature" jdbcType="INTEGER" property="temperature" />
    <result column="humidity" jdbcType="INTEGER" property="humidity" />
    <result column="detectionsign" jdbcType="INTEGER" property="detectionsign" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="updatetime" jdbcType="INTEGER" property="updatetime" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="elec_status" jdbcType="SMALLINT" property="elecStatus" />
    <result column="replace_status" jdbcType="INTEGER" property="replaceStatus" />
    <result column="replace_reason" jdbcType="VARCHAR" property="replaceReason" />
    <result column="latitude" jdbcType="DECIMAL" property="latitude" />
    <result column="longitude" jdbcType="DECIMAL" property="longitude" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, type_id, code, buy_electric, electric, status, category_id, operator_id, detailed_id, 
    device_admin, device_address, users_id, time, money, balance, d_status, voltage, 
    electric_current, power, reactive_power, apparent_power, power_factor, frequency, 
    leakage_current, temperature, humidity, detectionsign, version, updatetime, nickname, 
    elec_status, replace_status, replace_reason, latitude, longitude
  </sql>
  <select id="selectByExample" parameterType="com.information.pojo.DeviceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from device
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from device
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from device
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.information.pojo.DeviceExample">
    delete from device
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.information.pojo.Device">
    insert into device (id, type_id, code, 
      buy_electric, electric, status, 
      category_id, operator_id, detailed_id, 
      device_admin, device_address, users_id, 
      time, money, balance, 
      d_status, voltage, electric_current, 
      power, reactive_power, apparent_power, 
      power_factor, frequency, leakage_current, 
      temperature, humidity, detectionsign, 
      version, updatetime, nickname, 
      elec_status, replace_status, replace_reason, 
      latitude, longitude)
    values (#{id,jdbcType=INTEGER}, #{typeId,jdbcType=CHAR}, #{code,jdbcType=VARCHAR}, 
      #{buyElectric,jdbcType=INTEGER}, #{electric,jdbcType=INTEGER}, #{status,jdbcType=SMALLINT}, 
      #{categoryId,jdbcType=INTEGER}, #{operatorId,jdbcType=INTEGER}, #{detailedId,jdbcType=INTEGER}, 
      #{deviceAdmin,jdbcType=VARCHAR}, #{deviceAddress,jdbcType=VARCHAR}, #{usersId,jdbcType=INTEGER}, 
      #{time,jdbcType=INTEGER}, #{money,jdbcType=INTEGER}, #{balance,jdbcType=INTEGER}, 
      #{dStatus,jdbcType=SMALLINT}, #{voltage,jdbcType=INTEGER}, #{electricCurrent,jdbcType=INTEGER}, 
      #{power,jdbcType=INTEGER}, #{reactivePower,jdbcType=INTEGER}, #{apparentPower,jdbcType=INTEGER}, 
      #{powerFactor,jdbcType=INTEGER}, #{frequency,jdbcType=INTEGER}, #{leakageCurrent,jdbcType=INTEGER}, 
      #{temperature,jdbcType=INTEGER}, #{humidity,jdbcType=INTEGER}, #{detectionsign,jdbcType=INTEGER}, 
      #{version,jdbcType=INTEGER}, #{updatetime,jdbcType=INTEGER}, #{nickname,jdbcType=VARCHAR}, 
      #{elecStatus,jdbcType=SMALLINT}, #{replaceStatus,jdbcType=INTEGER}, #{replaceReason,jdbcType=VARCHAR}, 
      #{latitude,jdbcType=DECIMAL}, #{longitude,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.information.pojo.Device">
    insert into device
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="typeId != null">
        type_id,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="buyElectric != null">
        buy_electric,
      </if>
      <if test="electric != null">
        electric,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="categoryId != null">
        category_id,
      </if>
      <if test="operatorId != null">
        operator_id,
      </if>
      <if test="detailedId != null">
        detailed_id,
      </if>
      <if test="deviceAdmin != null">
        device_admin,
      </if>
      <if test="deviceAddress != null">
        device_address,
      </if>
      <if test="usersId != null">
        users_id,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="balance != null">
        balance,
      </if>
      <if test="dStatus != null">
        d_status,
      </if>
      <if test="voltage != null">
        voltage,
      </if>
      <if test="electricCurrent != null">
        electric_current,
      </if>
      <if test="power != null">
        power,
      </if>
      <if test="reactivePower != null">
        reactive_power,
      </if>
      <if test="apparentPower != null">
        apparent_power,
      </if>
      <if test="powerFactor != null">
        power_factor,
      </if>
      <if test="frequency != null">
        frequency,
      </if>
      <if test="leakageCurrent != null">
        leakage_current,
      </if>
      <if test="temperature != null">
        temperature,
      </if>
      <if test="humidity != null">
        humidity,
      </if>
      <if test="detectionsign != null">
        detectionsign,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="elecStatus != null">
        elec_status,
      </if>
      <if test="replaceStatus != null">
        replace_status,
      </if>
      <if test="replaceReason != null">
        replace_reason,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=CHAR},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="buyElectric != null">
        #{buyElectric,jdbcType=INTEGER},
      </if>
      <if test="electric != null">
        #{electric,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=SMALLINT},
      </if>
      <if test="categoryId != null">
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="operatorId != null">
        #{operatorId,jdbcType=INTEGER},
      </if>
      <if test="detailedId != null">
        #{detailedId,jdbcType=INTEGER},
      </if>
      <if test="deviceAdmin != null">
        #{deviceAdmin,jdbcType=VARCHAR},
      </if>
      <if test="deviceAddress != null">
        #{deviceAddress,jdbcType=VARCHAR},
      </if>
      <if test="usersId != null">
        #{usersId,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        #{time,jdbcType=INTEGER},
      </if>
      <if test="money != null">
        #{money,jdbcType=INTEGER},
      </if>
      <if test="balance != null">
        #{balance,jdbcType=INTEGER},
      </if>
      <if test="dStatus != null">
        #{dStatus,jdbcType=SMALLINT},
      </if>
      <if test="voltage != null">
        #{voltage,jdbcType=INTEGER},
      </if>
      <if test="electricCurrent != null">
        #{electricCurrent,jdbcType=INTEGER},
      </if>
      <if test="power != null">
        #{power,jdbcType=INTEGER},
      </if>
      <if test="reactivePower != null">
        #{reactivePower,jdbcType=INTEGER},
      </if>
      <if test="apparentPower != null">
        #{apparentPower,jdbcType=INTEGER},
      </if>
      <if test="powerFactor != null">
        #{powerFactor,jdbcType=INTEGER},
      </if>
      <if test="frequency != null">
        #{frequency,jdbcType=INTEGER},
      </if>
      <if test="leakageCurrent != null">
        #{leakageCurrent,jdbcType=INTEGER},
      </if>
      <if test="temperature != null">
        #{temperature,jdbcType=INTEGER},
      </if>
      <if test="humidity != null">
        #{humidity,jdbcType=INTEGER},
      </if>
      <if test="detectionsign != null">
        #{detectionsign,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=INTEGER},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="elecStatus != null">
        #{elecStatus,jdbcType=SMALLINT},
      </if>
      <if test="replaceStatus != null">
        #{replaceStatus,jdbcType=INTEGER},
      </if>
      <if test="replaceReason != null">
        #{replaceReason,jdbcType=VARCHAR},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=DECIMAL},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.information.pojo.DeviceExample" resultType="java.lang.Long">
    select count(*) from device
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update device
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.typeId != null">
        type_id = #{record.typeId,jdbcType=CHAR},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.buyElectric != null">
        buy_electric = #{record.buyElectric,jdbcType=INTEGER},
      </if>
      <if test="record.electric != null">
        electric = #{record.electric,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=SMALLINT},
      </if>
      <if test="record.categoryId != null">
        category_id = #{record.categoryId,jdbcType=INTEGER},
      </if>
      <if test="record.operatorId != null">
        operator_id = #{record.operatorId,jdbcType=INTEGER},
      </if>
      <if test="record.detailedId != null">
        detailed_id = #{record.detailedId,jdbcType=INTEGER},
      </if>
      <if test="record.deviceAdmin != null">
        device_admin = #{record.deviceAdmin,jdbcType=VARCHAR},
      </if>
      <if test="record.deviceAddress != null">
        device_address = #{record.deviceAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.usersId != null">
        users_id = #{record.usersId,jdbcType=INTEGER},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=INTEGER},
      </if>
      <if test="record.money != null">
        money = #{record.money,jdbcType=INTEGER},
      </if>
      <if test="record.balance != null">
        balance = #{record.balance,jdbcType=INTEGER},
      </if>
      <if test="record.dStatus != null">
        d_status = #{record.dStatus,jdbcType=SMALLINT},
      </if>
      <if test="record.voltage != null">
        voltage = #{record.voltage,jdbcType=INTEGER},
      </if>
      <if test="record.electricCurrent != null">
        electric_current = #{record.electricCurrent,jdbcType=INTEGER},
      </if>
      <if test="record.power != null">
        power = #{record.power,jdbcType=INTEGER},
      </if>
      <if test="record.reactivePower != null">
        reactive_power = #{record.reactivePower,jdbcType=INTEGER},
      </if>
      <if test="record.apparentPower != null">
        apparent_power = #{record.apparentPower,jdbcType=INTEGER},
      </if>
      <if test="record.powerFactor != null">
        power_factor = #{record.powerFactor,jdbcType=INTEGER},
      </if>
      <if test="record.frequency != null">
        frequency = #{record.frequency,jdbcType=INTEGER},
      </if>
      <if test="record.leakageCurrent != null">
        leakage_current = #{record.leakageCurrent,jdbcType=INTEGER},
      </if>
      <if test="record.temperature != null">
        temperature = #{record.temperature,jdbcType=INTEGER},
      </if>
      <if test="record.humidity != null">
        humidity = #{record.humidity,jdbcType=INTEGER},
      </if>
      <if test="record.detectionsign != null">
        detectionsign = #{record.detectionsign,jdbcType=INTEGER},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=INTEGER},
      </if>
      <if test="record.updatetime != null">
        updatetime = #{record.updatetime,jdbcType=INTEGER},
      </if>
      <if test="record.nickname != null">
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.elecStatus != null">
        elec_status = #{record.elecStatus,jdbcType=SMALLINT},
      </if>
      <if test="record.replaceStatus != null">
        replace_status = #{record.replaceStatus,jdbcType=INTEGER},
      </if>
      <if test="record.replaceReason != null">
        replace_reason = #{record.replaceReason,jdbcType=VARCHAR},
      </if>
      <if test="record.latitude != null">
        latitude = #{record.latitude,jdbcType=DECIMAL},
      </if>
      <if test="record.longitude != null">
        longitude = #{record.longitude,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update device
    set id = #{record.id,jdbcType=INTEGER},
      type_id = #{record.typeId,jdbcType=CHAR},
      code = #{record.code,jdbcType=VARCHAR},
      buy_electric = #{record.buyElectric,jdbcType=INTEGER},
      electric = #{record.electric,jdbcType=INTEGER},
      status = #{record.status,jdbcType=SMALLINT},
      category_id = #{record.categoryId,jdbcType=INTEGER},
      operator_id = #{record.operatorId,jdbcType=INTEGER},
      detailed_id = #{record.detailedId,jdbcType=INTEGER},
      device_admin = #{record.deviceAdmin,jdbcType=VARCHAR},
      device_address = #{record.deviceAddress,jdbcType=VARCHAR},
      users_id = #{record.usersId,jdbcType=INTEGER},
      time = #{record.time,jdbcType=INTEGER},
      money = #{record.money,jdbcType=INTEGER},
      balance = #{record.balance,jdbcType=INTEGER},
      d_status = #{record.dStatus,jdbcType=SMALLINT},
      voltage = #{record.voltage,jdbcType=INTEGER},
      electric_current = #{record.electricCurrent,jdbcType=INTEGER},
      power = #{record.power,jdbcType=INTEGER},
      reactive_power = #{record.reactivePower,jdbcType=INTEGER},
      apparent_power = #{record.apparentPower,jdbcType=INTEGER},
      power_factor = #{record.powerFactor,jdbcType=INTEGER},
      frequency = #{record.frequency,jdbcType=INTEGER},
      leakage_current = #{record.leakageCurrent,jdbcType=INTEGER},
      temperature = #{record.temperature,jdbcType=INTEGER},
      humidity = #{record.humidity,jdbcType=INTEGER},
      detectionsign = #{record.detectionsign,jdbcType=INTEGER},
      version = #{record.version,jdbcType=INTEGER},
      updatetime = #{record.updatetime,jdbcType=INTEGER},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      elec_status = #{record.elecStatus,jdbcType=SMALLINT},
      replace_status = #{record.replaceStatus,jdbcType=INTEGER},
      replace_reason = #{record.replaceReason,jdbcType=VARCHAR},
      latitude = #{record.latitude,jdbcType=DECIMAL},
      longitude = #{record.longitude,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.information.pojo.Device">
    update device
    <set>
      <if test="typeId != null">
        type_id = #{typeId,jdbcType=CHAR},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="buyElectric != null">
        buy_electric = #{buyElectric,jdbcType=INTEGER},
      </if>
      <if test="electric != null">
        electric = #{electric,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=SMALLINT},
      </if>
      <if test="categoryId != null">
        category_id = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="operatorId != null">
        operator_id = #{operatorId,jdbcType=INTEGER},
      </if>
      <if test="detailedId != null">
        detailed_id = #{detailedId,jdbcType=INTEGER},
      </if>
      <if test="deviceAdmin != null">
        device_admin = #{deviceAdmin,jdbcType=VARCHAR},
      </if>
      <if test="deviceAddress != null">
        device_address = #{deviceAddress,jdbcType=VARCHAR},
      </if>
      <if test="usersId != null">
        users_id = #{usersId,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=INTEGER},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=INTEGER},
      </if>
      <if test="balance != null">
        balance = #{balance,jdbcType=INTEGER},
      </if>
      <if test="dStatus != null">
        d_status = #{dStatus,jdbcType=SMALLINT},
      </if>
      <if test="voltage != null">
        voltage = #{voltage,jdbcType=INTEGER},
      </if>
      <if test="electricCurrent != null">
        electric_current = #{electricCurrent,jdbcType=INTEGER},
      </if>
      <if test="power != null">
        power = #{power,jdbcType=INTEGER},
      </if>
      <if test="reactivePower != null">
        reactive_power = #{reactivePower,jdbcType=INTEGER},
      </if>
      <if test="apparentPower != null">
        apparent_power = #{apparentPower,jdbcType=INTEGER},
      </if>
      <if test="powerFactor != null">
        power_factor = #{powerFactor,jdbcType=INTEGER},
      </if>
      <if test="frequency != null">
        frequency = #{frequency,jdbcType=INTEGER},
      </if>
      <if test="leakageCurrent != null">
        leakage_current = #{leakageCurrent,jdbcType=INTEGER},
      </if>
      <if test="temperature != null">
        temperature = #{temperature,jdbcType=INTEGER},
      </if>
      <if test="humidity != null">
        humidity = #{humidity,jdbcType=INTEGER},
      </if>
      <if test="detectionsign != null">
        detectionsign = #{detectionsign,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=INTEGER},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="elecStatus != null">
        elec_status = #{elecStatus,jdbcType=SMALLINT},
      </if>
      <if test="replaceStatus != null">
        replace_status = #{replaceStatus,jdbcType=INTEGER},
      </if>
      <if test="replaceReason != null">
        replace_reason = #{replaceReason,jdbcType=VARCHAR},
      </if>
      <if test="latitude != null">
        latitude = #{latitude,jdbcType=DECIMAL},
      </if>
      <if test="longitude != null">
        longitude = #{longitude,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.information.pojo.Device">
    update device
    set type_id = #{typeId,jdbcType=CHAR},
      code = #{code,jdbcType=VARCHAR},
      buy_electric = #{buyElectric,jdbcType=INTEGER},
      electric = #{electric,jdbcType=INTEGER},
      status = #{status,jdbcType=SMALLINT},
      category_id = #{categoryId,jdbcType=INTEGER},
      operator_id = #{operatorId,jdbcType=INTEGER},
      detailed_id = #{detailedId,jdbcType=INTEGER},
      device_admin = #{deviceAdmin,jdbcType=VARCHAR},
      device_address = #{deviceAddress,jdbcType=VARCHAR},
      users_id = #{usersId,jdbcType=INTEGER},
      time = #{time,jdbcType=INTEGER},
      money = #{money,jdbcType=INTEGER},
      balance = #{balance,jdbcType=INTEGER},
      d_status = #{dStatus,jdbcType=SMALLINT},
      voltage = #{voltage,jdbcType=INTEGER},
      electric_current = #{electricCurrent,jdbcType=INTEGER},
      power = #{power,jdbcType=INTEGER},
      reactive_power = #{reactivePower,jdbcType=INTEGER},
      apparent_power = #{apparentPower,jdbcType=INTEGER},
      power_factor = #{powerFactor,jdbcType=INTEGER},
      frequency = #{frequency,jdbcType=INTEGER},
      leakage_current = #{leakageCurrent,jdbcType=INTEGER},
      temperature = #{temperature,jdbcType=INTEGER},
      humidity = #{humidity,jdbcType=INTEGER},
      detectionsign = #{detectionsign,jdbcType=INTEGER},
      version = #{version,jdbcType=INTEGER},
      updatetime = #{updatetime,jdbcType=INTEGER},
      nickname = #{nickname,jdbcType=VARCHAR},
      elec_status = #{elecStatus,jdbcType=SMALLINT},
      replace_status = #{replaceStatus,jdbcType=INTEGER},
      replace_reason = #{replaceReason,jdbcType=VARCHAR},
      latitude = #{latitude,jdbcType=DECIMAL},
      longitude = #{longitude,jdbcType=DECIMAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.information.pojo.DeviceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from device
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>